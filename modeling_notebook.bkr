{
    "beaker": "2",
    "evaluators": [
        {
            "name": "HTML",
            "plugin": "HTML",
            "view": {
                "cm": {
                    "mode": "htmlmixed"
                }
            }
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            }
        },
        {
            "name": "Python3",
            "plugin": "Python3",
            "setup": "%matplotlib inline\nimport numpy\nimport matplotlib\nfrom matplotlib import pylab, mlab, pyplot\nnp = numpy\nplt = pyplot\nfrom IPython.display import display\nfrom IPython.core.pylabtools import figsize, getfigs\nfrom pylab import *\nfrom numpy import *\n",
            "view": {
                "cm": {
                    "mode": "python"
                }
            }
        }
    ],
    "cells": [
        {
            "id": "markdownlvj1ZR",
            "type": "markdown",
            "body": [
                "Notes:",
                "grid search imputation strategy (mean,median,most_frequent)  ",
                "test anamoly detection vs supervised learning algo    ",
                "test max of all part type features or min of all common features in part type  "
            ],
            "evaluatorReader": false
        },
        {
            "id": "code3JiVTj",
            "type": "code",
            "evaluator": "Python3",
            "input": {
                "body": [
                    "import os",
                    "os.chdir(\"C:/Users/macle/Desktop/kaggle/bosch-production-line-performance\")",
                    "",
                    "import warnings",
                    "warnings.filterwarnings('ignore')",
                    "",
                    "import json",
                    "import pandas as pd",
                    "import random",
                    "import numpy as np",
                    "",
                    "import matplotlib.pyplot as plt",
                    "import matplotlib as mpl",
                    "%matplotlib inline",
                    "",
                    "from sklearn import feature_extraction",
                    "from sklearn.metrics.pairwise import cosine_similarity",
                    "from sklearn.cluster import KMeans",
                    "from sklearn.cluster import AgglomerativeClustering",
                    "from sklearn.manifold import MDS",
                    "from sklearn.neighbors import DistanceMetric",
                    "from sklearn.neighbors import NearestNeighbors",
                    "from sklearn.ensemble import RandomForestRegressor",
                    "from sklearn.pipeline import Pipeline",
                    "from sklearn.preprocessing import Imputer",
                    "from sklearn.cross_validation import cross_val_score",
                    "",
                    "import itertools"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Hidden",
                "pluginName": "Python3",
                "shellId": "21EA35D8FB0B43338D6F5CBB2FEFCBBC",
                "elapsedTime": 799
            },
            "evaluatorReader": true,
            "lineCount": 28
        },
        {
            "id": "codeVWct2h",
            "type": "code",
            "evaluator": "Python3",
            "input": {
                "body": [
                    "with open('path_data.json', 'r') as infile:",
                    "    path_data = json.load(infile)",
                    "with open('feature_data.json', 'r') as infile:",
                    "    feature_data = json.load(infile)",
                    "with open('data/part_data.json', 'r') as infile:",
                    "    part_data = json.load(infile)"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Hidden",
                "pluginName": "Python3",
                "shellId": "0E0C74155ECF4E86AFC8067089F662C7",
                "elapsedTime": 52466
            },
            "evaluatorReader": true,
            "lineCount": 6
        },
        {
            "id": "code1GeHDL",
            "type": "code",
            "evaluator": "Python3",
            "input": {
                "body": [
                    "feature_list = [data[\"feature\"] for data in feature_data]",
                    "#only cluster paths ith >1000 parts to reduce noise and one-off outlier pathways",
                    "path_sparse_matrix = [[1 if feature in path[\"path\"] else 0 for feature in feature_list] for path in path_data if path[\"total_count\"] > 1000]",
                    "len(path_sparse_matrix)"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "BeakerDisplay",
                    "innertype": "Error",
                    "object": [
                        "name &apos;feature_data&apos; is not defined",
                        "name &apos;feature_data&apos; is not defined<br><span  class=\"ansired\">---------------------------------------------------------------------------</span><br><span  class=\"ansired\">NameError</span>                                 Traceback (most recent call last)<br><span  class=\"ansigreen\">&lt;ipython-input-1-dbcbc3e0d017&gt;</span> in <span  class=\"ansicyan\">&lt;module&gt;<span  class=\"ansiblue\">()</span>\n<span  class=\"ansigreen\">----&gt; 1<span  class=\"ansiyellow\"> </span>feature_list <span  class=\"ansiyellow\">=</span> <span  class=\"ansiyellow\">[</span>data<span  class=\"ansiyellow\">[</span><span  class=\"ansiblue\">&quot;feature&quot;</span><span  class=\"ansiyellow\">]</span> <span  class=\"ansigreen\">for</span> data <span  class=\"ansigreen\">in</span> feature_data<span  class=\"ansiyellow\">]</span><span  class=\"ansiyellow\"></span>\n<span  class=\"ansigreen\">      2</span> <span  class=\"ansired\">#only cluster paths ith &gt;1000 parts to reduce noise and one-off outlier pathways</span><span  class=\"ansiyellow\"></span><span  class=\"ansiyellow\"></span>\n<span  class=\"ansigreen\">      3</span> path_sparse_matrix <span  class=\"ansiyellow\">=</span> <span  class=\"ansiyellow\">[</span><span  class=\"ansiyellow\">[</span><span  class=\"ansicyan\">1</span> <span  class=\"ansigreen\">if</span> feature <span  class=\"ansigreen\">in</span> path<span  class=\"ansiyellow\">[</span><span  class=\"ansiblue\">&quot;path&quot;</span><span  class=\"ansiyellow\">]</span> <span  class=\"ansigreen\">else</span> <span  class=\"ansicyan\">0</span> <span  class=\"ansigreen\">for</span> feature <span  class=\"ansigreen\">in</span> feature_list<span  class=\"ansiyellow\">]</span> <span  class=\"ansigreen\">for</span> path <span  class=\"ansigreen\">in</span> path_data <span  class=\"ansigreen\">if</span> path<span  class=\"ansiyellow\">[</span><span  class=\"ansiblue\">&quot;total_count&quot;</span><span  class=\"ansiyellow\">]</span> <span  class=\"ansiyellow\">&gt;</span> <span  class=\"ansicyan\">1000</span><span  class=\"ansiyellow\">]</span><span  class=\"ansiyellow\"></span>\n<span  class=\"ansigreen\">      4</span> len<span  class=\"ansiyellow\">(</span>path_sparse_matrix<span  class=\"ansiyellow\">)</span><span  class=\"ansiyellow\"></span>\n<br><span  class=\"ansired\">NameError</span>: name &apos;feature_data&apos; is not defined"
                    ]
                },
                "selectedType": "BeakerDisplay",
                "pluginName": "Python3",
                "shellId": "2627505FE80B4BC98453588427AF2614",
                "elapsedTime": 220,
                "dataresult": 167,
                "height": 81
            },
            "evaluatorReader": true,
            "lineCount": 4
        },
        {
            "id": "code1ihj5s",
            "type": "code",
            "evaluator": "Python3",
            "input": {
                "body": [
                    "#code adapted from: http://brandonrose.org/clustering",
                    "def plot_clusters(data,dist_measure,n_clusters,algorithm,cluster_colors = ([\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",",
                    "                                                           \"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",",
                    "                                                           \"#cab2d6\",\"#6a3d9a\",\"#ffff99\",\"#b15928\",\"#8dd3c7\",\"#ffffb3\",",
                    "                                                           \"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",",
                    "                                                           \"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"])):",
                    "",
                    "    dist = DistanceMetric.get_metric(dist_measure)",
                    "    distances = dist.pairwise(data)",
                    "",
                    "    if algorithm == \"km\":",
                    "        model = KMeans(n_clusters=n_clusters)",
                    "        model.fit(data)",
                    "        clusters = model.labels_.tolist()",
                    "    else:",
                    "        model = AgglomerativeClustering(n_clusters=n_clusters,affinity=\"precomputed\",linkage=\"average\")",
                    "        model.fit(distances)",
                    "        clusters = model.labels_.tolist()",
                    "",
                    "    mds = MDS(n_components=2, dissimilarity=\"precomputed\", random_state=1)",
                    "    pos = mds.fit_transform(distances)  # shape (n_components, n_samples)",
                    "",
                    "    xs, ys = pos[:, 0], pos[:, 1]",
                    "    #create data frame that has the result of the MDS plus the cluster numbers and titles",
                    "    df = pd.DataFrame(dict(x=xs, y=ys, label=clusters)) ",
                    "",
                    "    #group by cluster",
                    "    groups = df.groupby('label')",
                    "",
                    "    # set up plot",
                    "    fig, ax = plt.subplots(figsize=(20, 9)) # set size",
                    "    ax.margins(0.05) # Optional, just adds 5% padding to the autoscaling",
                    "",
                    "    #iterate through groups to layer the plot",
                    "    #note that I use the cluster_name and cluster_color dicts with the 'name' lookup to return the appropriate color/label",
                    "    for name, group in groups:",
                    "        ax.plot(group.x, group.y, marker='o', linestyle='', ms=12, ",
                    "                label=\"Part Type \" + str(name+1), color=cluster_colors[name], ",
                    "                mec='none')",
                    "        ax.set_aspect('auto')",
                    "        ax.tick_params(\\",
                    "            axis= 'x',          # changes apply to the x-axis",
                    "            which='both',      # both major and minor ticks are affected",
                    "            bottom='off',      # ticks along the bottom edge are off",
                    "            top='off',         # ticks along the top edge are off",
                    "            labelbottom='off')",
                    "        ax.tick_params(\\",
                    "            axis= 'y',         # changes apply to the y-axis",
                    "            which='both',      # both major and minor ticks are affected",
                    "            left='off',      # ticks along the bottom edge are off",
                    "            top='off',         # ticks along the top edge are off",
                    "            labelleft='off')",
                    "",
                    "    ax.legend(numpoints=1)  #show legend with only 1 point",
                    "",
                    "    for i in range(len(df)):",
                    "        ax.text(df.ix[i]['x'], df.ix[i]['y'], str(i), size=8)",
                    "      ",
                    "    plt.show() #show the plot",
                    "    return model",
                    "    #uncomment the below to save the plot if need be",
                    "    #plt.savefig('clusters_small_noaxes.png', dpi=200)"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Hidden",
                "pluginName": "Python3",
                "shellId": "2627505FE80B4BC98453588427AF2614",
                "elapsedTime": 333
            },
            "evaluatorReader": true,
            "lineCount": 62
        },
        {
            "id": "codevQZx0E",
            "type": "code",
            "evaluator": "Python3",
            "input": {
                "body": [
                    "n_clusters = 3",
                    "part_type_model = plot_clusters(path_sparse_matrix,\"matching\",n_clusters,\"km\")"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "BeakerDisplay",
                    "innertype": "Error",
                    "object": [
                        "name &apos;path_sparse_matrix&apos; is not defined",
                        "name &apos;path_sparse_matrix&apos; is not defined<br><span  class=\"ansired\">---------------------------------------------------------------------------</span><br><span  class=\"ansired\">NameError</span>                                 Traceback (most recent call last)<br><span  class=\"ansigreen\">&lt;ipython-input-1-85a24656a812&gt;</span> in <span  class=\"ansicyan\">&lt;module&gt;<span  class=\"ansiblue\">()</span>\n<span  class=\"ansigreen\">      1</span> n_clusters <span  class=\"ansiyellow\">=</span> <span  class=\"ansicyan\">3</span><span  class=\"ansiyellow\"></span>\n<span  class=\"ansigreen\">----&gt; 2<span  class=\"ansiyellow\"> </span>part_type_model <span  class=\"ansiyellow\">=</span> plot_clusters<span  class=\"ansiyellow\">(</span>path_sparse_matrix<span  class=\"ansiyellow\">,</span><span  class=\"ansiblue\">&quot;matching&quot;</span><span  class=\"ansiyellow\">,</span>n_clusters<span  class=\"ansiyellow\">,</span><span  class=\"ansiblue\">&quot;km&quot;</span><span  class=\"ansiyellow\">)</span><span  class=\"ansiyellow\"></span>\n<br><span  class=\"ansired\">NameError</span>: name &apos;path_sparse_matrix&apos; is not defined"
                    ]
                },
                "selectedType": "BeakerDisplay",
                "pluginName": "Python3",
                "shellId": "2627505FE80B4BC98453588427AF2614",
                "elapsedTime": 204,
                "height": 81
            },
            "evaluatorReader": true,
            "lineCount": 2
        },
        {
            "id": "codeaGAADz",
            "type": "code",
            "evaluator": "Python3",
            "input": {
                "body": [
                    "part_type_features = {}",
                    "",
                    "for i,part in enumerate(part_data[0:10000]):",
                    "    if i % 10000 == 0:",
                    "        print (str(round(i/len(part_data)*100,0)) + \"%\")",
                    "    sparse_matrix = np.array([1 if feature in part[\"features\"] else 0 for feature in feature_list])",
                    "    part_type = str(part_type_model.predict(sparse_matrix)[0])",
                    "    if part_type in part_type_features.keys():",
                    "        part_type_features[part_type] = [max(x) for x in zip(part_type_features[part_type], sparse_matrix)] #take max of old feature matrix and new sample(0 or 1) at each feature index to update part-type feature-set",
                    "    else:",
                    "        part_type_features[part_type] = sparse_matrix ",
                    "",
                    "all_part_type_features = {}",
                    "part_type_data = {}",
                    "for part_type in part_type_features.keys():",
                    "    all_part_type_features[part_type] = [feature_list[i] for i,feature_bool in enumerate(part_type_features[part_type]) if feature_bool ==1]",
                    "",
                    "for i,part in enumerate(part_data[0:10000]):",
                    "    if i % 10000 == 0:",
                    "        print (str(round(i/len(part_data)*100,0)) + \"%\")",
                    "    sparse_matrix = np.array([1 if feature in part[\"features\"] else 0 for feature in feature_list])",
                    "    part_type = str(part_type_model.predict(sparse_matrix)[0])",
                    "    part_type_feature_list = all_part_type_features[part_type]",
                    "    sparse_matrix = [1 if feature in part[\"features\"] else 0 for feature in part_type_feature_list]",
                    "    timestamp_matrix =  [part['timestamps'][feature] if feature in part[\"features\"] else None for feature in part_type_feature_list]",
                    "    value_matrix =  [part['values'][feature] if feature in part[\"features\"] else None for feature in part_type_feature_list]",
                    "    defective = [part['defective']]",
                    "    feature_matrix = timestamp_matrix + value_matrix + defective",
                    "    if part_type in part_type_data.keys():",
                    "        part_type_data[part_type].append(feature_matrix)",
                    "    else:",
                    "        part_type_data[part_type] = [feature_matrix]",
                    "",
                    "with open('data/' + str(n_clusters) + '_part_data.json', 'w') as outfile:",
                    "    json.dump(part_type_data,outfile)"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "Results",
                    "outputdata": [
                        {
                            "type": "out",
                            "value": "0.0%\n0.0%"
                        },
                        {
                            "type": "out",
                            "value": "\n"
                        }
                    ]
                },
                "selectedType": "Results",
                "pluginName": "Python3",
                "shellId": "0E0C74155ECF4E86AFC8067089F662C7",
                "elapsedTime": 223481,
                "height": 87
            },
            "evaluatorReader": true,
            "lineCount": 35
        },
        {
            "id": "code0kSCtk",
            "type": "code",
            "evaluator": "Python3",
            "input": {
                "body": [
                    "len(all_part_type_features[\"2\"])"
                ]
            },
            "output": {
                "state": {},
                "result": "<div class=\"output_subarea output_text\"><pre>471</pre></div>",
                "selectedType": "Html",
                "pluginName": "Python3",
                "shellId": "0E0C74155ECF4E86AFC8067089F662C7",
                "elapsedTime": 201,
                "dataresult": 471,
                "height": 53
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "codem1LAhi",
            "type": "code",
            "evaluator": "Python3",
            "input": {
                "body": [
                    "n_clusters = 3",
                    "with open('data/' + str(n_clusters) + '_part_data.json', 'r') as infile:",
                    "    model_data = json.load(infile)",
                    "",
                    "type_1_data = np.array(model_data[\"1\"])",
                    "X = type_1_data[:,0:-1]",
                    "y = type_1_data[:,-1]",
                    "build_classifier(X,y)"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "BeakerDisplay",
                    "innertype": "Error",
                    "object": "Interrupted, saved while running."
                },
                "selectedType": "BeakerDisplay",
                "pluginName": "Python3",
                "shellId": "21EA35D8FB0B43338D6F5CBB2FEFCBBC",
                "elapsedTime": 2363,
                "dataresult": [
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0
                ],
                "height": 55
            },
            "evaluatorReader": true,
            "lineCount": 8
        },
        {
            "id": "codegKJ75X",
            "type": "code",
            "evaluator": "Python3",
            "input": {
                "body": [
                    "import xgboost as xgb",
                    "import sys",
                    "",
                    "from sklearn.cross_validation import *",
                    "from sklearn.grid_search import GridSearchCV",
                    "from sklearn.metrics import matthews_corrcoef",
                    "",
                    "import math",
                    "",
                    "def mcc(tp, tn, fp, fn):",
                    "    sup = tp * tn - fp * fn",
                    "    inf = (tp + fp) * (tp + fn) * (tn + fp) * (tn + fn)",
                    "    if inf==0:",
                    "        return 0",
                    "    else:",
                    "        return sup / np.sqrt(inf)",
                    "",
                    "def eval_mcc(y_true, y_prob, show=False):",
                    "    idx = np.argsort(y_prob)",
                    "    y_true_sort = y_true[idx]",
                    "    n = y_true.shape[0]",
                    "    nump = 1.0 * np.sum(y_true) # number of positive",
                    "    numn = n - nump # number of negative",
                    "    tp = nump",
                    "    tn = 0.0",
                    "    fp = numn",
                    "    fn = 0.0",
                    "    best_mcc = 0.0",
                    "    best_id = -1",
                    "    mccs = np.zeros(n)",
                    "    for i in range(n):",
                    "        # all items with idx <= i are predicted negative while others are predicted positive",
                    "        if y_true_sort[i] == 1:",
                    "            tp -= 1.0",
                    "            fn += 1.0",
                    "        else:",
                    "            fp -= 1.0",
                    "            tn += 1.0",
                    "        new_mcc = mcc(tp, tn, fp, fn)",
                    "        mccs[i] = new_mcc",
                    "        if new_mcc >= best_mcc:",
                    "            best_mcc = new_mcc",
                    "            best_id = i",
                    "    if show:",
                    "        best_proba = y_prob[idx[best_id]]",
                    "        y_pred = (y_prob > best_proba).astype(int)",
                    "        score = matthews_corrcoef(y_true, y_pred)",
                    "        print(score, best_mcc)",
                    "        plt.plot(mccs)",
                    "        return best_proba, best_mcc, y_pred",
                    "    else:ms",
                    "        print(\"best MCC \" + str(best_MCC))",
                    "        return best_mcc",
                    "",
                    "def mcc_eval(y_prob, dtrain):",
                    "    y_true = dtrain.get_label()",
                    "    best_mcc = eval_mcc(y_true, y_prob)",
                    "    return 'MCC', -best_mcc",
                    "",
                    "def build_classifier(X,y):",
                    "    ",
                    "    pipe = Pipeline([(\"imputer\", Imputer(missing_values=\"NaN\")),",
                    "                     (\"clf\",xgb.XGBClassifier())",
                    "                   ])",
                    "    ",
                    "    #when in doubt, use xgboost",
                    "    ",
                    "    parameters = {'imputer__strategy':(\"mean\",\"median\",\"most_frequent\"),",
                    "                  'clf__objective':['binary:logistic'],",
                    "                  'clf__eval_metric':[mcc_eval],",
                    "                  'clf__learning_rate': [0.15], #so called `eta` value",
                    "                  'clf__max_depth': [8],",
                    "                  'clf__min_child_weight': [3,11],",
                    "                  'clf__silent': [0],",
                    "                  'clf__subsample': [0.9],",
                    "                  'clf__colsample_bytree': [0.5],",
                    "                  'clf__n_estimators': [300], #number of trees",
                    "                  'clf__seed': [1337]}",
                    "",
                    "",
                    "    #should evaluate by train_eval instead of the full dataset",
                    "    clf = GridSearchCV(pipe, parameters, n_jobs=6, ",
                    "                       cv=StratifiedKFold(y, n_folds=5, shuffle=True), ",
                    "                        scoring=\"f1\",",
                    "                       verbose=99, refit=True)",
                    "",
                    "    clf.fit(X, y)",
                    "    return clf"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Hidden",
                "pluginName": "Python3",
                "shellId": "21EA35D8FB0B43338D6F5CBB2FEFCBBC",
                "elapsedTime": 353,
                "dataresult": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    791.22,
                    791.22,
                    791.22,
                    791.22,
                    791.22,
                    791.23,
                    791.24,
                    791.24,
                    791.24,
                    791.24,
                    791.24,
                    791.24,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    791.29,
                    791.29,
                    791.29,
                    791.29,
                    791.29,
                    791.29,
                    791.29,
                    791.29,
                    791.29,
                    791.29,
                    791.29,
                    791.29,
                    791.29,
                    791.29,
                    791.29,
                    791.29,
                    791.29,
                    791.29,
                    791.29,
                    791.29,
                    791.29,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    802.22,
                    802.22,
                    802.22,
                    802.22,
                    802.22,
                    802.22,
                    802.22,
                    802.22,
                    802.22,
                    802.22,
                    802.22,
                    802.22,
                    802.22,
                    802.22,
                    802.22,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    804.34,
                    null,
                    null,
                    804.35,
                    804.35,
                    804.35,
                    804.35,
                    804.35,
                    804.35,
                    804.35,
                    804.35,
                    804.35,
                    804.35,
                    804.35,
                    804.35,
                    804.35,
                    804.35,
                    804.36,
                    804.36,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    804.36,
                    804.36,
                    804.36,
                    804.36,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    "3",
                    0.065,
                    -0.034,
                    -0.105,
                    -0.001,
                    -0.162,
                    0.156,
                    -0.23399999999999999,
                    -0.218,
                    -0.243,
                    0.183,
                    -0.051,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    -0.371,
                    -0.016,
                    0.14400000000000002,
                    -0.013999999999999999,
                    0.065,
                    -0.154,
                    -0.016,
                    -0.096,
                    0.015,
                    "3",
                    -0.114,
                    0.132,
                    0.156,
                    0.183,
                    -0.162,
                    0,
                    -0.069,
                    -0.12300000000000001,
                    0.111,
                    -0.114,
                    -0.023,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    -0.11699999999999999,
                    0.036000000000000004,
                    -0.016,
                    0.17800000000000002,
                    0.799,
                    0.034,
                    -0.131,
                    0.259,
                    0.899,
                    "145",
                    0.06,
                    -0.064,
                    -0.14,
                    0.039,
                    0.898,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    -0.013999999999999999,
                    "1",
                    -0.19,
                    "1",
                    -0.037000000000000005,
                    "1",
                    0.131,
                    "1",
                    -0.021,
                    "1",
                    -0.012,
                    "1",
                    -0.012,
                    "1",
                    -0.02,
                    "1",
                    0.053,
                    "1",
                    0.033,
                    "1",
                    -0.001,
                    "1",
                    -0.034,
                    "1",
                    -0.179,
                    "1",
                    0.13699999999999998,
                    "1",
                    -0.05,
                    "1",
                    -0.115,
                    "1",
                    "1",
                    "1",
                    0.131,
                    "1",
                    -0.02,
                    "1",
                    0.138,
                    "1",
                    -0.021,
                    "1",
                    -0.062,
                    "1",
                    -0.011000000000000001,
                    "1",
                    -0.037000000000000005,
                    "1",
                    -0.012,
                    "1",
                    "1",
                    "1",
                    -0.034,
                    "1",
                    -0.115,
                    "1",
                    -0.001,
                    "1",
                    -0.05,
                    "1",
                    0.057,
                    "1",
                    "1",
                    0.057,
                    "1",
                    "1",
                    "1",
                    "1",
                    -0.19,
                    "1",
                    -0.012,
                    "1",
                    0.053,
                    "1",
                    -0.022000000000000002,
                    "1",
                    -0.076,
                    "1",
                    -0.012,
                    "1",
                    -0.013999999999999999,
                    "1",
                    -0.021,
                    "1",
                    "1",
                    "1",
                    0.033,
                    "1",
                    0.13699999999999998,
                    "1",
                    0.053,
                    "1",
                    -0.179,
                    "1",
                    -0.04,
                    "1",
                    0.52,
                    "1",
                    -0.04,
                    "1",
                    0.52,
                    "1",
                    -0.004,
                    "1",
                    -0.005,
                    "1",
                    -0.004,
                    "1",
                    0,
                    "1",
                    0,
                    "1",
                    0,
                    "1",
                    0,
                    null,
                    null,
                    -0.21,
                    -0.193,
                    0.004,
                    -0.21,
                    -0.21,
                    -0.006,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    -0.08199999999999999,
                    -0.002,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    0,
                    0,
                    0,
                    0,
                    null,
                    null,
                    null,
                    0
                ]
            },
            "evaluatorReader": true,
            "lineCount": 88
        }
    ],
    "namespace": {}
}
